name: Build and Push Docker Image
description: Build and Push Docker Image
inputs:
  registry_username:
    description: "Username for image registry"
    required: true
  registry_password:
    description: "Password for image registry"
    required: true
  ec_image_name:
    description: 'Name of the easyconnect image to push'
    required: true
    default: 'codetiger666/docker-easyconnect'
  atrust_image_name:
    description: 'Name of the atrust image to push'
    required: true
    default: 'codetiger666/docker-atrust'
  archs:
    description: 'Archs of the easyconnect image to push'
    required: true
    default: 'mips64le arm64 i386 amd64'
runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Login to Docker registry
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}

    - name: Build Docker image
      shell: bash
      run: |
        to-tag() {
          tag="$( IFS=-; printf %s "$*"; )"
          if [ -n "$tag" ]; then
            printf %s "$tag"
          else
            echo latest
          fi
        }
        docker-build() {
          #docker pull $1
          docker buildx build --build-arg BUILD_ENV=actions "$@"
        }
        branch="$(git branch --show-current)"
        case "$branch" in
          master) prefix= ;;
          develop) prefix=dev ;;
          *) prefix="$branch" ;;
        esac

        build() {
          docker image build --build-arg VPN_TYPE=ATRUST -f Dockerfile.build -t hagb/docker-easyconnect:build .
          docker image build --build-arg VPN_URL=https://atrustcdn.sangfor.com/standard/linux/2.5.10.32/uos/arm64/aTrustInstaller_arm64.deb --build-arg VPN_TYPE=ATRUST --tag codetiger666/docker-atrust:1.0 -f Dockerfile .

    - name: Push Docker image
      shell: bash
      run: |
        token="$( curl -sH "Content-Type: application/json" \
                    -X POST -d "{\"username\": \"${{ inputs.registry_username }}\", \"password\": \"${{ inputs.registry_password }}\"}" \
                    https://hub.docker.com/v2/users/login/ |
                  jq -r .token )"
        delete_tag() {
            curl -sH "Content-Type: application/json" -X DELETE -H "Authorization: JWT $token" \
                  https://hub.docker.com/v2/repositories/$1/tags/$2/
        }
        
        docker push codetiger666/docker-atrust:1.0

        
